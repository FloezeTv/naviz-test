name: Python Wheel

on:
  push:
    # DEBUG: build always
    # tags:
    #   - "v*" # Build whenever a full version of naviz is released

jobs:
  build:
    strategy:
      matrix:
        os: [linux, windows. macos]
        include:
          - arch: x86_64
          - arch: aarch64
          - os: linux
            arch: x86
          - os: linux
            arch: armv7
          - os: linux
            arch: s390x
          - os: linux
            arch: ppc64le
          - os: windows
            arch: x86
          - os: linux
            manylinux: auto
          - os: linux
            manylinux: musllinux_1_2
          - os: linux
            image: ubuntu-latest
          - os: macos
            image: macos-latest
          - os: windows
            image: windows-latest
    # runs-on: ${{ matrix.image }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "${{ toJson(matrix) }}""
      # - uses: actions/checkout@v4
      # - uses: actions/setup-python@v5
      #   with:
      #     python-version: 3.x
      # - name: Build wheels
      #   uses: PyO3/maturin-action@v1
      #   with:
      #     target: ${{ matrix.arch }}
      #     args: --release --out dist --find-interpreter
      #     sccache: "true"
      #     manylinux: ${{ matrix.manylinux }}
      # - name: Upload wheels
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: wheels-${{ matrix.os }}-${{ matrix.arch }}
      #     path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build, sdist]
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: "wheels-*/*"
      # - name: Publish to PyPI
      #   uses: PyO3/maturin-action@v1
      #   env:
      #     MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      #   with:
      #     command: upload
      #     args: --non-interactive --skip-existing wheels-*/*

